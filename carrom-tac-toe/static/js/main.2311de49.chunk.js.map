{"version":3,"sources":["Components/Box/Box.module.css","Components/WinnerInfo/WinnerInfo.module.css","Containers/Game/Game.module.css","Components/Welcome/Welcome.module.css","Components/Error/Error.module.css","Components/GameInfo/GameInfo.module.css","Components/Rules/Rules.module.css","Components/Box/Box.js","Components/GameInfo/GameInfo.js","Components/Error/Error.js","Components/WinnerInfo/WinnerInfo.js","Components/Welcome/Welcome.js","Components/Rules/Rules.js","Containers/Game/Game.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Box","props","boxContent","boxClasses","classes","checked","player","className","Checked","BlackChecked","join","WhiteChecked","isAvailableMove","push","IsAvailable","isSelected","IsSelected","onClick","clicked","GameInfo","currentPlayer","Error","errorArea","showError","ErrorContainer","ErrorMessage","errorMessage","WinnerInfo","winnerInfo_html","gameover","winner","Header","Body","NewGameButton","newGame","Welcome","toggleRules","RulesButton","Rules","rules_html","show","Game","state","boxes","boxIndex","coords","availableMoves","boxSelectedCoords","remainingDiscs","player1","player2","isGameOver","showRules","onCheckBox","boxCoords","clearErrors","selectedBox","find","box","boxAlreadyChecked","boxBelongingToCurrentPlayer","playerHasDiscsAvailable","handleIncorrectSelection","showAvailableMoves","makeMove","placeDisc","updatedBoxes","updatedBox","updatedRemainingDiscs","filter","b","concat","sort","a","setState","prevState","checkWinner","switchPlayer","availableCoords","x","split","y","moveLeft","toString","isOccupied","moveRight","moveUp","moveDown","message","fromCoords","toCoords","console","log","some","m","fromIndex","findIndex","toIndex","updatedFromBox","updatedToBox","player1Boxes","map","hasWinningPattern","declareWinner","player2Boxes","length","distributedCoords","coord","every","dc","onNewGame","onToggleRules","this","boxAvailable","availableCoord","boxSelected","key","bind","GameArea","Board","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2311de49.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"Box_Box__pTRdZ\",\"IsAvailable\":\"Box_IsAvailable__1ACv2\",\"IsSelected\":\"Box_IsSelected__1_w7U\",\"Checked\":\"Box_Checked__1vzab\",\"BlackChecked\":\"Box_BlackChecked__2Bx_E\",\"WhiteChecked\":\"Box_WhiteChecked__2m0tP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WinnerInfo\":\"WinnerInfo_WinnerInfo__34EvX\",\"Header\":\"WinnerInfo_Header__3mX5u\",\"Body\":\"WinnerInfo_Body__iTOOa\",\"NewGameButton\":\"WinnerInfo_NewGameButton__2j2Dt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Game\":\"Game_Game__2bHBC\",\"GameArea\":\"Game_GameArea__2DIvg\",\"Board\":\"Game_Board__937nz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Welcome\":\"Welcome_Welcome__1hkUJ\",\"RulesButton\":\"Welcome_RulesButton___M4Ry\",\"NewGameButton\":\"Welcome_NewGameButton__2SVz4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorContainer\":\"Error_ErrorContainer__3obRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameInfo\":\"GameInfo_GameInfo__10WIz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rules\":\"Rules_Rules__1T_pD\"};","import React from 'react';\r\nimport classes from './Box.module.css'\r\n\r\nconst Box = props => {\r\n    let boxContent = '';\r\n    let boxClasses = [classes.Box];\r\n    if (props.checked && props.player === 1) {\r\n        boxContent = <div className={[classes.Checked, classes.BlackChecked].join(' ')}></div>\r\n    }\r\n    else if (props.checked && props.player === 2) {\r\n        boxContent = <div className={[classes.Checked, classes.WhiteChecked].join(' ')}></div>\r\n    }\r\n    \r\n    if (props.isAvailableMove) {\r\n        boxClasses.push(classes.IsAvailable);\r\n    }\r\n\r\n    if (props.isSelected) {\r\n        boxClasses.push(classes.IsSelected)\r\n    }\r\n\r\n    return (\r\n        <div className={boxClasses.join(' ')} onClick={props.clicked}>\r\n            {boxContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Box;","import React from 'react'\r\nimport classes from './GameInfo.module.css'\r\n\r\nconst GameInfo = (props) => {\r\n    return (\r\n        <div className={classes.GameInfo}>\r\n            {props.currentPlayer === 1 ? 'Black' : 'White'} plays\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameInfo\r\n","import React from 'react';\r\nimport classes from './Error.module.css'\r\n\r\nconst Error = (props) => {\r\n    let errorArea = '';\r\n    if (props.showError) {\r\n        errorArea = (\r\n            <div className={classes.ErrorContainer}>\r\n                <small>Invalid Move</small><br/>\r\n                <div className={classes.ErrorMessage}>{props.errorMessage}</div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        errorArea\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport classes from './WinnerInfo.module.css';\r\n\r\nconst WinnerInfo = props => {\r\n    let winnerInfo_html = null;\r\n\r\n    if (props.gameover) {\r\n        const winner = props.winner === 1 ? 'Black' : 'White';\r\n        winnerInfo_html = (\r\n\r\n            <div className={classes.WinnerInfo}>\r\n                <div className={classes.Header}>Game Over</div>\r\n                <div className={classes.Body}>\r\n                    {winner} has won!\r\n                    <button className={[classes.NewGameButton, 'Button'].join(' ')} onClick={props.newGame}>New Game</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return winnerInfo_html;\r\n}\r\n\r\nexport default WinnerInfo\r\n","import React from 'react'\r\nimport classes from './Welcome.module.css'\r\n\r\nconst Welcome = props => {\r\n    return (\r\n        <div className={classes.Welcome}>\r\n            <p>Welcome to Carrom-Tac-Toe</p>\r\n            <button onClick={props.newGame} className={['Button', classes.NewGameButton].join(' ')}>New Game</button>\r\n            <button onClick={props.toggleRules} className={['Button', classes.RulesButton].join(' ')}>Rules</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome","import React from 'react'\r\nimport classes from './Rules.module.css';\r\n\r\nconst Rules = props => {\r\n    let rules_html = null;\r\n    if (props.show) {\r\n        rules_html = (\r\n            <div className={classes.Rules}>\r\n                <h2>Rules of Carrom-Tac-Toe (Patent pending) are simple.</h2>\r\n                <p>\r\n                    It's a game played between two players.\r\n                    Each player has three coins which are either white or black in color.\r\n                    For the first three tries, the players will place these coins on a 3x3 board.\r\n                </p>\r\n                <p>\r\n                    After the players have exhausted their coins, they can move \r\n                    the coins either horizontally or vertically, one position at a time.\r\n                    A coin cannot be moved into a position that is occupied by other coin. \r\n                    You cannot jump or skip over another coin.\r\n                </p>\r\n                <p>\r\n                    The objective of the game is similar to one we have in Tic-Tac-Toe.\r\n                    Any player who is able to line up their discs vertically, horizontally or diagonally\r\n                    wins.\r\n                    Also, if you have no available moves left, you lose.\r\n                </p>\r\n                <p>\r\n                    Happy Corrom-Tac-Toeing!\r\n                </p>\r\n                <button onClick={props.toggleRules} className={['Button'].join(' ')}>Close</button>\r\n\r\n            </div>\r\n        )\r\n    }\r\n    return rules_html;\r\n}\r\n\r\nexport default Rules;","import React, { Component } from 'react';\r\nimport Box from '../../Components/Box/Box';\r\nimport classes from './Game.module.css';\r\nimport GameInfo from '../../Components/GameInfo/GameInfo';\r\nimport Error from '../../Components/Error/Error';\r\nimport WinnerInfo from '../../Components/WinnerInfo/WinnerInfo';\r\nimport Welcome from '../../Components/Welcome/Welcome';\r\nimport Rules from '../../Components/Rules/Rules';\r\n\r\nexport default class Game extends Component {\r\n    state = {\r\n        boxes: [\r\n            { boxIndex: 0, coords: '0-0', checked: false, player: 0 },\r\n            { boxIndex: 1, coords: '0-1', checked: false, player: 0 },\r\n            { boxIndex: 2, coords: '0-2', checked: false, player: 0 },\r\n            { boxIndex: 3, coords: '1-0', checked: false, player: 0 },\r\n            { boxIndex: 4, coords: '1-1', checked: false, player: 0 },\r\n            { boxIndex: 5, coords: '1-2', checked: false, player: 0 },\r\n            { boxIndex: 6, coords: '2-0', checked: false, player: 0 },\r\n            { boxIndex: 7, coords: '2-1', checked: false, player: 0 },\r\n            { boxIndex: 8, coords: '2-2', checked: false, player: 0 },\r\n        ],\r\n        availableMoves: [],\r\n        currentPlayer: 1,\r\n        boxSelectedCoords: '',\r\n        remainingDiscs: { player1: 3, player2: 3 },\r\n        showError: false,\r\n        errorMessage: '',\r\n        winner: 0,\r\n        isGameOver: false,\r\n        showRules: false\r\n    }\r\n\r\n    onCheckBox = boxCoords => {\r\n        if (this.state.isGameOver) {\r\n            return;\r\n        }\r\n        this.clearErrors();\r\n        const selectedBox = this.state.boxes.find(box => box.coords === boxCoords);\r\n        const boxAlreadyChecked = selectedBox.checked;\r\n        const boxBelongingToCurrentPlayer = selectedBox.player === this.state.currentPlayer;\r\n\r\n        const playerHasDiscsAvailable = this.state.remainingDiscs['player' + this.state.currentPlayer] > 0;\r\n\r\n        if (!boxAlreadyChecked && playerHasDiscsAvailable) {\r\n            this.placeDisc(selectedBox.coords);\r\n            return;\r\n        }\r\n\r\n        if (boxAlreadyChecked && playerHasDiscsAvailable) {\r\n            this.handleIncorrectSelection('Cannot place disc on an already occupied box.')\r\n            return;\r\n        }\r\n\r\n        if (boxAlreadyChecked && boxBelongingToCurrentPlayer) {\r\n            this.showAvailableMoves(selectedBox.coords);\r\n            return;\r\n        }\r\n\r\n        if (boxAlreadyChecked && !boxBelongingToCurrentPlayer) {\r\n            this.handleIncorrectSelection('You cannot move opposition player\\'s disc');\r\n            return;\r\n        }\r\n\r\n        const movesAvailable = !!this.state.boxSelectedCoords;\r\n\r\n        if (movesAvailable) {\r\n            this.makeMove(this.state.boxSelectedCoords, selectedBox.coords);\r\n            return;\r\n        }\r\n\r\n        if (!this.state.boxSelectedCoords && !playerHasDiscsAvailable) {\r\n            this.handleIncorrectSelection('Select a disc to move first');\r\n            return;\r\n        }\r\n    }\r\n\r\n    placeDisc = boxCoords => {\r\n        let updatedBoxes = [...this.state.boxes];\r\n        let updatedBox = { ...this.state.boxes.find(box => box.coords === boxCoords) };\r\n        let updatedRemainingDiscs = { ...this.state.remainingDiscs };\r\n        updatedBox.checked = true;\r\n        updatedBox.player = this.state.currentPlayer;\r\n        updatedRemainingDiscs['player' + this.state.currentPlayer] -= 1;\r\n        updatedBoxes = updatedBoxes.filter(b => b.coords !== boxCoords).concat(updatedBox).sort((a, b) => a.boxIndex - b.boxIndex);\r\n        this.setState(prevState => {\r\n            return {\r\n                boxes: updatedBoxes,\r\n                remainingDiscs: updatedRemainingDiscs\r\n            }\r\n        }, this.checkWinner);\r\n        this.switchPlayer();\r\n    }\r\n\r\n    switchPlayer = () => {\r\n        this.setState(prevState => {\r\n            return {\r\n                currentPlayer: prevState.currentPlayer === 1 ? 2 : 1,\r\n                availableMoves: [],\r\n                boxSelectedCoords: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    showAvailableMoves = boxCoords => {\r\n\r\n        this.setState({\r\n            availableMoves: [],\r\n            boxSelectedCoords: boxCoords\r\n        })\r\n        let availableCoords = [];\r\n        const x = +boxCoords.split('-')[0];\r\n        const y = +boxCoords.split('-')[1];\r\n\r\n        const moveLeft = x.toString() + '-' + (y - 1);\r\n        if (!this.isOccupied(moveLeft) && y - 1 >= 0) {\r\n            availableCoords.push(moveLeft);\r\n        }\r\n        const moveRight = x.toString() + '-' + (y + 1);\r\n        if (!this.isOccupied(moveRight) && y + 1 < 3) {\r\n            availableCoords.push(moveRight);\r\n        }\r\n        const moveUp = (x - 1).toString() + '-' + (y);\r\n        if (!this.isOccupied(moveUp) && x - 1 >= 0) {\r\n            availableCoords.push(moveUp);\r\n        }\r\n        const moveDown = (x + 1).toString() + '-' + y;\r\n        if (!this.isOccupied(moveDown) && x + 1 < 3) {\r\n            availableCoords.push(moveDown);\r\n        }\r\n\r\n        this.setState({\r\n            availableMoves: availableCoords\r\n        })\r\n    }\r\n\r\n    isOccupied = coords => {\r\n        if (this.state.boxes.find(box => box.coords === coords && box.checked)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n    handleIncorrectSelection = message => {\r\n        this.setState({\r\n            showError: true,\r\n            errorMessage: message\r\n        })\r\n    }\r\n\r\n    clearErrors = () => {\r\n        this.setState({\r\n            showError: false,\r\n            errorMessage: ''\r\n        })\r\n    }\r\n\r\n    makeMove = (fromCoords, toCoords) => {\r\n        console.log('sliding from ' + fromCoords + ' to ' + toCoords);\r\n        const isMoveAvailable = this.state.availableMoves.some(m => m === toCoords);\r\n        if (!isMoveAvailable) {\r\n            this.handleIncorrectSelection('You can only move one space at a time horizontally or vertically.');\r\n            return;\r\n        }\r\n        const fromIndex = this.state.boxes.findIndex(box => box.coords === fromCoords);\r\n        const toIndex = this.state.boxes.findIndex(box => box.coords === toCoords);\r\n        let updatedBoxes = [...this.state.boxes];\r\n        let updatedFromBox = { ...updatedBoxes.find(box => box.boxIndex === fromIndex) };\r\n        updatedFromBox.checked = false;\r\n        updatedFromBox.player = 0;\r\n        let updatedToBox = { ...updatedBoxes.find(box => box.boxIndex === toIndex) };\r\n        updatedToBox.checked = true;\r\n        updatedToBox.player = this.state.currentPlayer;\r\n        updatedBoxes = updatedBoxes\r\n            .filter(box => box.boxIndex !== fromIndex && box.boxIndex !== toIndex)\r\n            .concat(updatedFromBox, updatedToBox)\r\n            .sort((a, b) => a.boxIndex - b.boxIndex);\r\n        this.setState({\r\n            boxes: updatedBoxes\r\n        }, this.checkWinner);\r\n        this.switchPlayer();\r\n    }\r\n\r\n    checkWinner = () => {\r\n        const player1Boxes = this.state.boxes.filter(box => box.player === 1).map(box => box.coords);\r\n        const isPlayer1Winner = this.hasWinningPattern(player1Boxes);\r\n        if (isPlayer1Winner) {\r\n            this.declareWinner(1);\r\n            return;\r\n        }\r\n\r\n        const player2Boxes = this.state.boxes.filter(box => box.player === 2).map(box => box.coords);\r\n        const isPlayer2Winner = this.hasWinningPattern(player2Boxes);\r\n        if (isPlayer2Winner) {\r\n            this.declareWinner(2);\r\n            return;\r\n        }\r\n    }\r\n\r\n    hasWinningPattern = coords => {\r\n        if (coords.length < 3) {\r\n            return false;\r\n        }\r\n\r\n        const distributedCoords = coords.map(coord => ({ x: coord.split('-')[0], y: coord.split('-')[1] }));\r\n        const isStraightMatch = distributedCoords.every(dc => dc.x === distributedCoords[0].x) || distributedCoords.every(dc => dc.y === distributedCoords[0].y);\r\n        if (isStraightMatch) {\r\n            return true;\r\n        }\r\n\r\n        const isDiagonalMatch = distributedCoords.every(dc => dc.x === dc.y) || distributedCoords.every(dc => +dc.x + +dc.y === 2);\r\n        if (isDiagonalMatch) {\r\n            return true;\r\n        }\r\n\r\n\r\n\r\n        return false;\r\n    }\r\n\r\n    declareWinner = winner => {\r\n        this.setState({\r\n            winner: winner,\r\n            isGameOver: true\r\n        })\r\n    }\r\n\r\n    onNewGame = () => {\r\n        this.setState({\r\n            boxes: [\r\n                { boxIndex: 0, coords: '0-0', checked: false, player: 0 },\r\n                { boxIndex: 1, coords: '0-1', checked: false, player: 0 },\r\n                { boxIndex: 2, coords: '0-2', checked: false, player: 0 },\r\n                { boxIndex: 3, coords: '1-0', checked: false, player: 0 },\r\n                { boxIndex: 4, coords: '1-1', checked: false, player: 0 },\r\n                { boxIndex: 5, coords: '1-2', checked: false, player: 0 },\r\n                { boxIndex: 6, coords: '2-0', checked: false, player: 0 },\r\n                { boxIndex: 7, coords: '2-1', checked: false, player: 0 },\r\n                { boxIndex: 8, coords: '2-2', checked: false, player: 0 },\r\n            ],\r\n            availableMoves: [],\r\n            currentPlayer: 1,\r\n            boxSelectedCoords: '',\r\n            remainingDiscs: { player1: 3, player2: 3 },\r\n            showError: false,\r\n            errorMessage: '',\r\n            winner: 0,\r\n            isGameOver: false\r\n        })\r\n    }\r\n\r\n    onToggleRules = () => {\r\n        this.setState(prevState => ({\r\n            showRules: !prevState.showRules\r\n        }))\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const boxes = this.state.boxes.map(box => {\r\n            const boxAvailable = this.state.availableMoves.some(availableCoord => availableCoord === box.coords);\r\n            const boxSelected = this.state.boxSelectedCoords === box.coords;\r\n            return (\r\n                <Box {...box}\r\n                    key={box.coords}\r\n                    clicked={this.onCheckBox.bind(this, box.coords)}\r\n                    isAvailableMove={boxAvailable}\r\n                    isSelected={boxSelected}></Box>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className={classes.Game}>\r\n                <div className={classes.GameArea}>\r\n                    <Welcome newGame={this.onNewGame} toggleRules={this.onToggleRules} />\r\n                    <GameInfo currentPlayer={this.state.currentPlayer} />\r\n\r\n                    <div className={classes.Board}>\r\n                        {boxes}\r\n                    </div>\r\n                    <Error showError={this.state.showError} errorMessage={this.state.errorMessage} />\r\n                    <WinnerInfo\r\n                        gameover={this.state.isGameOver}\r\n                        newGame={this.onNewGame}\r\n                        winner={this.state.winner} />\r\n                    <Rules show={this.state.showRules} toggleRules={this.onToggleRules}  />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Game from './Containers/Game/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}